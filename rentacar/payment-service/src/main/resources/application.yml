eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:9001/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    preferIpAddress: true
server:
  port: 0
spring:
  application:
    name: payment
  datasource:
    password: 123456
    url: jdbc:postgresql://localhost:5432/rentacarpaymentdb
    username: postgres
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      javax:
        persistence:
          validation:
            mode: none
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: inventory2
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    topic:
      name: rental_topics
  zipkin:
    base-url: http://localhost:9411
